// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext{
        kotlin_version = "1.3.61"
        glide_version='4.10.0'
        nav_version = "2.2.1"
    }
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0-beta01'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven {url 'https://developer.huawei.com/repo/'}
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        maven{url getRepositoryDir()}
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// get android sdk dir
String getRepositoryDir() {
    def rootDir = project.rootDir
    def androidSdkDir = null
    String envVar = System.getenv("ANDROID_HOME")
    def localProperties = new File(rootDir, 'local.properties')
    String systemProperty = System.getProperty("android.home")
    if (envVar != null) {
        androidSdkDir = envVar
    } else if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDirProp = properties.getProperty('sdk.dir')
        if (sdkDirProp != null) {
            androidSdkDir = sdkDirProp
        } else {
            sdkDirProp = properties.getProperty('android.dir')
            if (sdkDirProp != null) {
                androidSdkDir = (new File(rootDir, sdkDirProp)).getAbsolutePath()
            }
        }
    }
    if (androidSdkDir == null && systemProperty != null) {
        androidSdkDir = systemProperty
    }
    if (androidSdkDir == null) {
        println("don't have env: android_home ,please set...")
        if (androidSdkDir == null) {
            throw new RuntimeException(
                    "Unable to determine Android SDK directory.")
        }
    }

    def deployPath = file(androidSdkDir + "/extras/android/m2repository/")
    String repository_url = "file://${deployPath.absolutePath}"
    repository_url
}